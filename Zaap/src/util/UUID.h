#pragma once

#include <Common.h>
#include <Types.h>

namespace zaap
{
	//UUID is the shot therm for "universally unique identifier"
	//This UUID is 128 bits large and can be randomly generated by calling RandomUUID(UUID *uuid);
	struct ZAAP_API UUID
	{
		union
		{
			
			byte Data[16];

			struct
			{
				
				byte Data1[4];
				byte Data2[2];
				byte Data3[2];
				byte Data4[8];
			};
		};

		//TODO 0x00 at the start or end aren't written to string
		//String format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
		String toString() const;

		//operators
		bool operator==(const UUID &other) const;
		bool operator!=(const UUID &other) const;
	};

	void ZAAP_API RandomUUID(UUID *uuid);

	//String format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
	String ZAAP_API ToString(const UUID &uuid);
}
